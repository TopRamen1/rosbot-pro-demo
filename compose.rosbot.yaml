# Quick Start (at fist stop ROS Master if working on host)
# $ docker compose -f compose.rosbot.yaml up

version: "2.3"

services:
  # ROS Noetic + ROS 2 Galactic
  bridge:
    image: ros:galactic-ros1-bridge
    restart: on-failure
    network_mode: host
    ipc: host
    environment:
      - ROS_IP=127.0.0.1
      - ROS_DOMAIN_ID=2
    command: ros2 run ros1_bridge dynamic_bridge

  # ROS Master (using custom port in case Master is already running on host OS)
  ros-master:
    image: ros:melodic-ros-core
    restart: on-failure
    network_mode: host
    ipc: host
    environment:
      - ROS_IP=127.0.0.1
    command: stdbuf -o L roscore

  microros:
    image: husarion/micro-ros-agent
    network_mode: host
    ipc: host
    environment:
      - ROS_DOMAIN_ID=2
    command: udp4 --port 8888

  ros-rplidar:
    image: husarion/rplidar:latest
    devices:
      - /dev/ttyUSB0
    network_mode: host
    ipc: host
    environment:
      - "ROS_IP=127.0.0.1"
      - "ROS_MASTER_URI=http://127.0.0.1:11311"
    tty: true        # docker run -t
    command: roslaunch rplidar_ros rplidar_s1.launch --wait